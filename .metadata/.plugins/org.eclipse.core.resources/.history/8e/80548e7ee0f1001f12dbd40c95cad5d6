#include "key.h"
#include "stm32f1xx_hal.h"
#include "string.h"

extern UART_HandleTypeDef huart2;

typedef enum
{
	KEY_INVALID = -1,
	KEY_0,
	KEY_1,
}KeyNum;

static KeyNum keyNum = 0;
int8_t GetKeyNum()
{
	int8_t ret = keyNum;
	keyNum = KEY_INVALID;
	return ret;
}

void KeyTickProcess()
{
	static uint8_t keyCurState = 0;
	GPIO_PinState keyPrevState = keyCurState;
	keyCurState = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
	if (keyPrevState == GPIO_PIN_SET && keyCurState == GPIO_PIN_RESET) {
		keyNum = KEY_0;
		const uint8_t* keyProcessMsg = "Key0 pressed!";
		HAL_UART_Transmit_IT(&huart2, keyProcessMsg, strlen(keyProcessMsg));
	}
}
